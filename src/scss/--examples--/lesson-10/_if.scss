@use "sass:math";

//* @if statement

@mixin avatar($size, $circle: false) {
    width: $size;
    height: $size;

    @if $circle {
        border-radius: 50%;
    }
} //* By default $cirlce is false. If will be true - applying border-radius to an element with specific calculated value.

.square-avatar {
    @include avatar(100px);
}

.circle-avatar {
    @include avatar(100px, $circle: true);
}

@mixin fonts($fs, $fw: null, $lh: null, $ls: null, $align: null) {
    font-size: $fs;

    @if $fw {
        font-weight: $fw;
    }

    @if $lh {
        @if $lh == normal {
            line-height: normal;
        } @else if math.unit($lh) == "px" {
            line-height: calc($lh / $fs);
        } @else {
            @error "Value #{$lh} for line-height is incorrect";
        }
    }

    @if $ls == normal {
        letter-spacing: normal;
    } @else {
        letter-spacing: #{calc($ls / $fs)}em;
    }

    @if $align {
        text-align: $align;
    }
} //* If unit of line-height is px - using calc function to calculate the value of line-height as coefficient. math.unit() returns the unit of a number (px, em, rem, etc). If in pixels - dividing line-height by font-size to calculate the value of line-height as a coefficient. Similar logic works for letter-spacing. $fw & @align - also optional parameters, which will be applied just when sended to mixin while call directly. Otherwise will be applied by browser.

.title {
    @include fonts(20px, $fw: 600, $lh: 28px, $ls: 0.5px, $align: center);
}
